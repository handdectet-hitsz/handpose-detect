<?xml version="1.0"?>
<doc>
    <assembly>
        <name>nsoftware.IPWorks</name>
    </assembly>
    <members>
        <member name="T:nsoftware.core.j2cs.LineBufferBase">
            <summary>
            Provides functions for storing and appending large byte array in memory
            </summary>
        </member>
        <member name="T:nsoftware.IPWorks.DnsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.DnsResponseEventArgs">
            <summary>Event arguments for the Response event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Dns.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Dns.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Dns.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Dns.Query(System.String)">
            <summary>Query a Domain</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Dns.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Dns.OnResponse">
            <summary>Fires after a DNS query.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.DNSPort">
            <summary>The port to connect to on the DNS Server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.DNSServer">
            <summary>The address of the DNS Server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.FieldIndex">
            <summary>The index of the selected field of the current record.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.QueryDomain">
            <summary>The domain to query.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.QueryType">
            <summary>The record type to query.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RecordCount">
            <summary>The number of RecordSource records in the last response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RecordDataB">
            <summary>The full record data as received from the DNS server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RecordData">
            <summary>The full record data as received from the DNS server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RecordDomain">
            <summary>The domain name associated with the selected response record.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RecordFieldCount">
            <summary>Number of fields in the record.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RecordFieldName">
            <summary>The name of the field selected by FieldIndex for RecordIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RecordFieldValueB">
            <summary>The value of the field selected by FieldIndex for RecordIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RecordFieldValue">
            <summary>The value of the field selected by FieldIndex for RecordIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RecordSource">
            <summary>The source of records being listed in the record arrays.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RecordTTL">
            <summary>The record Time To Live (TTL) value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RecordType">
            <summary>The record type corresponding to RecordIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RecordTypeName">
            <summary>String representation of the current record type defined by RecordType .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.Recursive">
            <summary>Determines whether to ask the DNSServer to recursively query other servers.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RequestId">
            <summary>The id of the current DNS request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.Status">
            <summary>A standard string interpretation of StatusCode .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.StatusCode">
            <summary>The success or error code for the DNS query.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Dns.RecordDataBIndexer">
            <summary>Indexer for RecordData.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Dns.RecordDataIndexer">
            <summary>Indexer for RecordData.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Dns.RecordDomainIndexer">
            <summary>Indexer for RecordDomain.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Dns.RecordFieldCountIndexer">
            <summary>Indexer for RecordFieldCount.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Dns.RecordFieldNameIndexer">
            <summary>Indexer for RecordFieldName.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Dns.RecordFieldValueBIndexer">
            <summary>Indexer for RecordFieldValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Dns.RecordFieldValueIndexer">
            <summary>Indexer for RecordFieldValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Dns.RecordTTLIndexer">
            <summary>Indexer for RecordTTL.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Dns.RecordTypeIndexer">
            <summary>Indexer for RecordType.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Dns.RecordTypeNameIndexer">
            <summary>Indexer for RecordTypeName.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FilemailerConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FilemailerEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FilemailerErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FilemailerPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FilemailerStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FilemailerTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.AddAttachment(System.String)">
            <summary>Adds FileName as an attachment.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.Connect">
            <summary>Connects to the mail relay and sends the SMTP HELO command.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.Disconnect">
            <summary>Disconnect from the SMTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.ProcessQueue(System.String)">
            <summary>Sends the messages which have previously been queued into QueueDir .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.Queue(System.String)">
            <summary>Queues the message into QueueDir .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.ResetHeaders">
            <summary>Resets all the message headers to empty.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.Send">
            <summary>Send the current message and MIME encoded attachment.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Filemailer.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Filemailer.OnEndTransfer">
            <summary>Fired when the message text completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Filemailer.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Filemailer.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Filemailer.OnStartTransfer">
            <summary>Fired when the message text starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Filemailer.OnTransfer">
            <summary>Fired while the message text gets transferred to MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.AttachmentCount">
            <summary>The number of file attachments to the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Attachments">
            <summary>The paths of files to attach to the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.AuthMechanism">
            <summary>The authentication mechanism to be used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.BCc">
            <summary>A comma separated list of addresses for blind carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Cc">
            <summary>A comma separated list of addresses for carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Command">
            <summary>Can be used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.DeliveryNotificationTo">
            <summary>Email address to send a delivery notification to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.From">
            <summary>The email address of the sender (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Importance">
            <summary>Importance of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.MailPort">
            <summary>The server port for SMTP (default 25).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.MailServer">
            <summary>The name or address of a mail server (mail relay).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.MessageDate">
            <summary>The Date of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.MessageId">
            <summary>The MessageId for the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.MessageText">
            <summary>The full text of the message to send (without headers).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.OtherHeaders">
            <summary>An RFC 822 compliant string consisting of extra headers.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Password">
            <summary>A login password to login with in the MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Priority">
            <summary>Priority of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.ReadReceiptTo">
            <summary>Email address to send a read receipt to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.ReplyTo">
            <summary>A mail address to reply to (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.SendTo">
            <summary>A comma separated list of addresses for destinations (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Sensitivity">
            <summary>Sensitivity of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Subject">
            <summary>The subject of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.User">
            <summary>A user id to login as in the MailServer .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Filemailer.AttachmentsIndexer">
            <summary>Indexer for Attachments.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpDirListEventArgs">
            <summary>Event arguments for the DirList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Abort">
            <summary>Abort Current Upload/Download.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Append">
            <summary>Append data from LocalFile to a remote file RemoteFile on an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.DeleteFile(System.String)">
            <summary>Remove a file specified by FileName from an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Download">
            <summary>Download a RemoteFile from an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.ListDirectory">
            <summary>List the current directory specified by RemotePath on an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.ListDirectoryLong">
            <summary>List extended directory information for RemotePath .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Logoff">
            <summary>Logoff from the FTP server by posting a QUIT command.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Logon">
            <summary>Logon to the FTP RemoteHost using the current User and Password .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.MakeDirectory(System.String)">
            <summary>Create a directory on an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.RemoveDirectory(System.String)">
            <summary>Remove a directory specified by DirName from an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.RenameFile(System.String)">
            <summary>Change the name of RemoteFile to NewName .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.StoreUnique">
            <summary>Upload a file with a Unique Name to an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Upload">
            <summary>Upload a file specified by LocalFile to an FTP server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnDirList">
            <summary>Fired when a directory entry is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnEndTransfer">
            <summary>Fired when a file completes downloading/uploading.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnPITrail">
            <summary>Traces the commands sent to the server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnStartTransfer">
            <summary>Fired when a file starts downloading/uploading.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnTransfer">
            <summary>Fired during file download/upload.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Account">
            <summary>The user Account to login with.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Command">
            <summary>Can be used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.FileSize">
            <summary>The size of the file pointed to by RemoteFile .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.FileTime">
            <summary>The last modification time of the file pointed to by RemoteFile .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.LocalFile">
            <summary>The path to a local file for download/upload.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Overwrite">
            <summary>Whether or not the component should overwrite files during transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Passive">
            <summary>Controls whether to direct the server into passive mode.  Recommended if behind a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Password">
            <summary>The password to login with.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.RemoteFile">
            <summary>The name of the remote file for uploading, downloading, etc.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.RemoteHost">
            <summary>The domain name or IP address of the FTP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.RemotePath">
            <summary>The current path in the FTP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.RemotePort">
            <summary>The port for the FTP service (default is 21).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.StartByte">
            <summary>The byte index in RemoteFile and LocalFile from which to start the transmission.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.TransferMode">
            <summary>The transfer mode (ASCII or Binary).  If the value is 0 (default), the initial server mode will be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.User">
            <summary>The user id to login as.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HtmlmailerConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HtmlmailerEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HtmlmailerErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HtmlmailerPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HtmlmailerStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HtmlmailerTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.AddAttachment(System.String)">
            <summary>Adds FileName as an attachment.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.Connect">
            <summary>Connects to the mail relay and sends the SMTP HELO command.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.Disconnect">
            <summary>Disconnect from the SMTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.ProcessQueue(System.String)">
            <summary>Sends the messages which have previously been queued into QueueDir .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.Queue(System.String)">
            <summary>Queues the message into QueueDir .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.ResetHeaders">
            <summary>Resets all the message headers to empty.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.Send">
            <summary>Send the current message and MIME encoded attachment.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Htmlmailer.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Htmlmailer.OnEndTransfer">
            <summary>Fired when the message text completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Htmlmailer.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Htmlmailer.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Htmlmailer.OnStartTransfer">
            <summary>Fired when the message text starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Htmlmailer.OnTransfer">
            <summary>Fired while the message text gets transferred to MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.AttachmentCount">
            <summary>The number of file attachments to the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Attachments">
            <summary>The paths of files to attach to the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.AuthMechanism">
            <summary>The authentication mechanism to be used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.BCc">
            <summary>A comma separated list of addresses for blind carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Cc">
            <summary>A comma separated list of addresses for carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Command">
            <summary>Can be used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.DeliveryNotificationTo">
            <summary>Email address to send a delivery notification to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.From">
            <summary>The email address of the sender (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.HTMLFile">
            <summary>The path to a local HTML file.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.ImageCount">
            <summary>The number of embedded images in the HTML message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.ImageIds">
            <summary>Content IDs for embedded images.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Images">
            <summary>The embedded images in the HTML message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.ImageTypes">
            <summary>Content types for embedded images.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Importance">
            <summary>Importance of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.MailPort">
            <summary>The server port for SMTP (default 25).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.MailServer">
            <summary>The name or address of a mail server (mail relay).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.MessageDate">
            <summary>The Date of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.MessageHTML">
            <summary>The HTML version of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.MessageId">
            <summary>The MessageId for the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.MessageText">
            <summary>The plain text version of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.OtherHeaders">
            <summary>An RFC 822 compliant string consisting of extra headers.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.ParseHTML">
            <summary>Controls the behavior of the MessageHTML property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Password">
            <summary>A login password to login with in the MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Priority">
            <summary>Priority of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.ReadReceiptTo">
            <summary>Email address to send a read receipt to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.ReplyTo">
            <summary>A mail address to reply to (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.SendTo">
            <summary>A comma separated list of addresses for destinations (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Sensitivity">
            <summary>Sensitivity of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Subject">
            <summary>The subject of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.User">
            <summary>A user id to login as in the MailServer .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Htmlmailer.AttachmentsIndexer">
            <summary>Indexer for Attachments.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Htmlmailer.ImageIdsIndexer">
            <summary>Indexer for ImageIds.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Htmlmailer.ImagesIndexer">
            <summary>Indexer for Images.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Htmlmailer.ImageTypesIndexer">
            <summary>Indexer for ImageTypes.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.SetPostData(System.Byte[],System.Int32,System.Int32)">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.AddCookie(System.String,System.String)">
            <summary>Sets a cookie and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.Get(System.String)">
            <summary>Fetch the document using the HTTP GET method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.Head(System.String)">
            <summary>Fetch the document headers using the HTTP HEAD method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.Post(System.String)">
            <summary>Posts data to the HTTP server using the HTTP POST method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.Put(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.ResetHeaders">
            <summary>Resets all HTTP headers, cookies, LocalFile , and AttachedFile .</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.AttachedFile">
            <summary>A file to append to PostData if the POST or PUT methods are used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.AuthScheme">
            <summary>The authorization scheme to be used when server authorization is to be performed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.ContentType">
            <summary>Content type for posted data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.CookieCount">
            <summary>Number of cookies in the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.CookieName">
            <summary>Array of cookie names.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.CookieValue">
            <summary>Array of cookie values.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.From">
            <summary>The email address of the HTTP agent (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.HTTPMethod">
            <summary>The HTTP method used for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.IfModifiedSince">
            <summary>A date determining the maximum age of the desired document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten. (optional)</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.PostDataB">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.PostData">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Pragma">
            <summary>A browser/server specific header line (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.ProxyAuthorization">
            <summary>Similar to the Authorization property, but for proxy authorization.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.ProxyPassword">
            <summary>A password if Basic authentication is to be used for the proxy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.ProxyPort">
            <summary>Port for the proxy server (default 80).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.ProxyServer">
            <summary>Name or IP address of a proxy server (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.ProxyUser">
            <summary>A user name if Basic authentication is to be used for the proxy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Range">
            <summary>The byte-range to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.TransferredDataB">
            <summary>The contents of the last transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.TransferredData">
            <summary>The contents of the last transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.URL">
            <summary>The URL to fetch.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.URLPath">
            <summary>The path for the URL.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.URLPort">
            <summary>The port for the URL.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.URLScheme">
            <summary>The scheme for the URL.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.URLServer">
            <summary>The server for the URL.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Http.CookieNameIndexer">
            <summary>Indexer for CookieName.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Http.CookieValueIndexer">
            <summary>Indexer for CookieValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IcmpportDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IcmpportErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IcmpportReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Icmpport.SetDataToSend(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host.  Write-only property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Icmpport.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Icmpport.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Icmpport.Send(System.Byte[])">
            <summary>Send data to the remote host.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Icmpport.OnDataIn">
            <summary>Fired when new ICMP messages come in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Icmpport.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Icmpport.OnReadyToSend">
            <summary>Fired when the component is ready to send data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.AcceptData">
            <summary>Enables or disables data reception (the DataIn event).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.Active">
            <summary>Enables or disables sending and receiving of data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.DataToSendB">
            <summary>A string of data to be sent to the remote host.  Write-only property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.DataToSend">
            <summary>A string of data to be sent to the remote host.  Write-only property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.DontRoute">
            <summary>If set to True, forces the socket to send data directly to interface (no routing).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.MessageSubType">
            <summary>The subtype of the ICMP message (part of the ICMP header).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.MessageType">
            <summary>The type of the ICMP message (part of the ICMP header).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.RemoteHost">
            <summary>The address of the RemoteHost.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.TimeToLive">
            <summary>The time to live (TTL) value for the ICMP packets sent by the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapMailboxACLEventArgs">
            <summary>Event arguments for the MailboxACL event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapMailboxListEventArgs">
            <summary>Event arguments for the MailboxList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapMessageInfoEventArgs">
            <summary>Event arguments for the MessageInfo event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapMessagePartEventArgs">
            <summary>Event arguments for the MessagePart event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.AddMessageFlags(System.String)">
            <summary>Add the specified flags to the messages specified by MessageSet .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.AppendToMailbox">
            <summary>Appends the message in MessageText to the mailbox specified by Mailbox .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.CheckMailbox">
            <summary>Sends a 'CHECK' command to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.CloseMailbox">
            <summary>Remove all messages marked with 'Deleted' flag from the currently selected mailbox and unselect mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.Connect">
            <summary>Connect to an IMAP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.CopyToMailbox">
            <summary>Copies the messages specified by MessageSet to the mailbox specified by Mailbox .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.CreateMailbox">
            <summary>Create a new mailbox specified by Mailbox .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.DeleteFromMailbox">
            <summary>Marks the messages specified by MessageSet as deleted.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.DeleteMailbox">
            <summary>Delete a mailbox specified by Mailbox .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.DeleteMailboxACL(System.String)">
            <summary>Deletes mailbox access control rights for a specific user.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.Disconnect">
            <summary>Disconnect from an IMAP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.ExamineMailbox">
            <summary>Select a Mailbox (Read-only mode).</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.ExpungeMailbox">
            <summary>Remove all messages marked with 'Deleted' flag from the currently selected mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.FetchMessageHeaders">
            <summary>Get the message headers of messages specified by the MessageSet property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.FetchMessageInfo">
            <summary>Get information about messages specified by the MessageSet property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.FetchMessagePart">
            <summary>Get a message part specified by PartId .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.FetchMessageText">
            <summary>Get the message text of messages specified by the MessageSet property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.GetMailboxACL">
            <summary>Gets mailbox access control rights.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.ListMailboxes">
            <summary>List all mailboxes matching all criteria in the Mailbox property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.ListSubscribedMailboxes">
            <summary>List all subscribed mailboxes matching all criteria in the Mailbox property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.LocalizeDate(System.String)">
            <summary>Converts a valid RFC 822 message date to local date and time.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.MoveToMailbox">
            <summary>Moves the messages specified by MessageSet to the mailbox specified by Mailbox .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.Noop">
            <summary>Sends a 'NOOP' command to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.RenameMailbox(System.String)">
            <summary>Change the name of Mailbox to NewName .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.ResetMessageFlags">
            <summary>Replace the flags of the messages specified by MessageSet with the flags specified by MessageFlags .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.SearchMailbox">
            <summary>Search selected mailbox for specified text.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.SelectMailbox">
            <summary>Select a Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.SetMailboxACL(System.String,System.String)">
            <summary>Sets mailbox access control rights for a specific user.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.SubscribeMailbox">
            <summary>Subscribe to the mailbox specified by Mailbox .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.UnsetMessageFlags">
            <summary>Remove the flags specified by MessageFlags from the messages specified by MessageSet .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.UnsubscribeMailbox">
            <summary>Unsubscribe from the mailbox specified by Mailbox .</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnEndTransfer">
            <summary>Fired when the message or the part data finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnMailboxACL">
            <summary>Fires for each set of access control rights returned by the server</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnMailboxList">
            <summary>Fired for each mailbox received through the ListMailboxes and ListSubscribedMailboxes methods.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnMessageInfo">
            <summary>Fired with information for the message(s) retrieved by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnMessagePart">
            <summary>Fired for each message part when FetchMessageInfo is called.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnStartTransfer">
            <summary>Fired when the message or the part data starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnTransfer">
            <summary>Fired while the message gets transferred from the MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.AuthMechanism">
            <summary>The authentication mechanism to be used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Command">
            <summary>Can be used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.EndByte">
            <summary>The byte index of the position where the transfer should end.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.LocalFile">
            <summary>The path to a local file for downloading the message body.  If the file exists, it is overwritten (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Mailbox">
            <summary>Name of the mailbox selected on the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MailboxFlags">
            <summary>Defined flags in the selected mailbox.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MailPort">
            <summary>The port of the IMAP server (default is 143).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MailServer">
            <summary>The name or address of the mail server (IMAP server).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageBCc">
            <summary>Array property with the list of BCc recipients of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageCc">
            <summary>Array property with the list of Cc recipients of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageContentEncoding">
            <summary>The ContentEncoding of the selected message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageContentType">
            <summary>The ContentType of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageCount">
            <summary>The total number of messages on the Mailbox .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageDate">
            <summary>The time the message was created.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageDeliveryTime">
            <summary>The time the message was delivered to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageFlags">
            <summary>Contains the flags of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageFrom">
            <summary>The address of the author of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageHeaders">
            <summary>RFC822-encoded headers of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageId">
            <summary>The message id of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageInReplyTo">
            <summary>The unique message ID of the message this one is in reply to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageNetId">
            <summary>The globally unique id of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageReplyTo">
            <summary>Email address(s) where replies to the message should be sent.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageSender">
            <summary>The address of the sender of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageSet">
            <summary>The set of messages to operate on.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageSize">
            <summary>The size of the selected message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageSubject">
            <summary>The subject of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageText">
            <summary>The body of the retrieved message</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageTo">
            <summary>Array property with the list of direct recipients of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.PartId">
            <summary>The PartId of the part to retrieve.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Password">
            <summary>The password used to authenticate to the MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.PeekMode">
            <summary>When set to True, the message Seen flag is not changed during reading.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.RecentMessageCount">
            <summary>Number of new messages on the Mailbox .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.SearchCriteria">
            <summary>Search criteria to use for search operations.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.SortCriteria">
            <summary>Sort criteria to use for message retrieval operations.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.StartByte">
            <summary>The byte index of the position where the transfer should start.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.UIDMode">
            <summary>If true, permanent message id-s are used instead of the default temporary id-s.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.User">
            <summary>The user name used to authenticate to the MailServer .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Imap.MessageBCcIndexer">
            <summary>Indexer for MessageBCc.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Imap.MessageCcIndexer">
            <summary>Indexer for MessageCc.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Imap.MessageToIndexer">
            <summary>Indexer for MessageTo.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpdaemonConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpdaemonConnectionRequestEventArgs">
            <summary>Event arguments for the ConnectionRequest event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpdaemonDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpdaemonDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpdaemonErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpdaemonReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.Disconnect(System.Int32)">
            <summary>Disconnect from the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.Send(System.Int32,System.Byte[])">
            <summary>Send data to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.SendLine(System.Int32,System.String)">
            <summary>Sends a string followed by a newline.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.Shutdown">
            <summary>Shutdown the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipdaemon.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipdaemon.OnConnectionRequest">
            <summary>Fired when a request for connection comes from a remote host.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipdaemon.OnDataIn">
            <summary>Fired when data (complete lines) comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipdaemon.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipdaemon.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipdaemon.OnReadyToSend">
            <summary>Fired when the component is ready to send data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.AcceptData">
            <summary>Enables or disables data reception (the DataIn event).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.BytesSent">
            <summary>The number of bytes actually sent after an assignment to DataToSend .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.Connected">
            <summary>Used to disconnect individual connections and/or show their status.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.ConnectionBacklog">
            <summary>The maximum number of pending connections maintained by the TCP/IP subsystem.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.ConnectionCount">
            <summary>The number of currently connected clients.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.DataToSendB">
            <summary>A string of data to be sent to the remote host.  Write-only property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.DataToSend">
            <summary>A string of data to be sent to the remote host.  Write-only property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.EOLB">
            <summary>Used to break the incoming data stream into chunks separated by EOL .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.EOL">
            <summary>Used to break the incoming data stream into chunks separated by EOL .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.KeepAlive">
            <summary>When True, KEEPALIVE packets are enabled (for long connections).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.Linger">
            <summary>When set to True, connections are terminated gracefully.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.Listening">
            <summary>If True, the component accepts incoming connections on LocalPort.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.LocalAddress">
            <summary>The IP address of the interface for ConnectionId in Internet dotted format.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.LocalPort">
            <summary>The TCP port in the local host where the component listens.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.RemoteHost">
            <summary>The IP address of the RemoteHost in Internet dotted format.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.RemotePort">
            <summary>The IP port of the RemoteHost for a connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.SingleLineMode">
            <summary>Special mode for line-oriented protocols.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ipdaemon.AcceptDataIndexer">
            <summary>Indexer for AcceptData.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ipdaemon.BytesSentIndexer">
            <summary>Indexer for BytesSent.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ipdaemon.ConnectedIndexer">
            <summary>Indexer for Connected.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ipdaemon.DataToSendBIndexer">
            <summary>Indexer for DataToSend.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ipdaemon.DataToSendIndexer">
            <summary>Indexer for DataToSend.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ipdaemon.EOLBIndexer">
            <summary>Indexer for EOL.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ipdaemon.EOLIndexer">
            <summary>Indexer for EOL.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ipdaemon.LocalAddressIndexer">
            <summary>Indexer for LocalAddress.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ipdaemon.RemoteHostIndexer">
            <summary>Indexer for RemoteHost.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ipdaemon.RemotePortIndexer">
            <summary>Indexer for RemotePort.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ipdaemon.SingleLineModeIndexer">
            <summary>Indexer for SingleLineMode.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpinfoErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpinfoRequestCompleteEventArgs">
            <summary>Event arguments for the RequestComplete event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.DHCPRelease">
            <summary>Releases the IP Address of the current adapter specified by AdapterIndex .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.DHCPRenew">
            <summary>Renews the IP Address of the current adapter specified by AdapterIndex .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.GetMAC(System.String)">
            <summary>Returns the MAC address of the network interface at IPAddress .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.Reset">
            <summary>Resets the component stopping all pending requests and refreshing network information.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.ResolveAddress(System.String)">
            <summary>Resolve an IP address.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.ResolveName(System.String)">
            <summary>Resolve a host name.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipinfo.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipinfo.OnRequestComplete">
            <summary>Fired after an asynchronous request completes.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterCount">
            <summary>The number of adapters in the system.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterDescription">
            <summary>The description of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterDeviceIndex">
            <summary>The system index of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterDHCPEnabled">
            <summary>Shows whether or not the adapter identified by AdapterIndex has DHCP Enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterDHCPServer">
            <summary>The DHCP server of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterGateway">
            <summary>The default gateway of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterIndex">
            <summary>Sets the current adapter.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterIPAddress">
            <summary>The IP address of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterLeaseExpires">
            <summary>The expiration date and time of the lease obtained by the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterLeaseObtained">
            <summary>The date and time of when the current lease was obtained by the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterName">
            <summary>The name of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterOtherIPAddresses">
            <summary>Other IP addresses leased by the adapter specified by AdapterIndex , if any.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterPhysicalAddress">
            <summary>The physical address of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterPrimaryWINSServer">
            <summary>The primary WINS server of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterSecondaryWINSServer">
            <summary>The secondary WINS server of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterSubnetMask">
            <summary>The subnet of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterType">
            <summary>The type of adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterUsesWINS">
            <summary>Shows whether or not the adapter identified by AdapterIndex uses WINS.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.ARPProxy">
            <summary>Shows whether the adapter can act as an ARP proxy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.DHCPScope">
            <summary>The DHCP Scope of the DHCP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.DNSEnabled">
            <summary>Shows whether or not the adapter identified by LocalHost has DNS Enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.DNSServer">
            <summary>The DNS server for the adapter specified by LocalHost .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.DomainName">
            <summary>The current network domain on which the system resides.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.HostAddress">
            <summary>An Internet Address in dotted format.  When set, it initiates a search for the corresponding host name.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.HostAliases">
            <summary>Other names corresponding to the host with name HostName.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.HostName">
            <summary>The Domain Name of an Internet host.  When set, it initiates a search for the corresponding address(es).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.LocalHost">
            <summary>The name of the local host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.NodeType">
            <summary>The type of node for the system.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.OtherAddresses">
            <summary>Other addresses for the host identified by HostName (for multihomed hosts).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.OtherDNSServers">
            <summary>Other DNS servers configured for the adapter.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.PendingRequests">
            <summary>The number of requests awaiting for completion.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.RequestId">
            <summary>The handle of the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.RoutingEnabled">
            <summary>Shows whether routing is enabled on the adapter.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.ServiceAliases">
            <summary>Other names by which the service specified by ServiceName / ServicePort is known.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.ServiceName">
            <summary>A name for a service.  When set, it initiates a search for the corresponding port number and protocol.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.ServicePort">
            <summary>A port number for a service.  When set, it initiates a search for the corresponding service name and protocol.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.ServiceProtocol">
            <summary>The protocol of the service specified by ServiceName / ServicePort .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpmonitorErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpmonitorIPAddressEventArgs">
            <summary>Event arguments for the IPAddress event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpmonitorIPPacketEventArgs">
            <summary>Event arguments for the IPPacket event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipmonitor.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipmonitor.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipmonitor.ListIPAddresses">
            <summary>Lists the valid IP addresses for this host.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipmonitor.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipmonitor.OnIPAddress">
            <summary>Fired for each valid ip address on this host.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipmonitor.OnIPPacket">
            <summary>Fired whenever a packet is received.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipmonitor.AcceptData">
            <summary>Enables or disables data reception (the IPPacket event).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipmonitor.Active">
            <summary>Enables or disables network monitoring.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipmonitor.IPPacketB">
            <summary>The contents of the current packet.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipmonitor.IPPacket">
            <summary>The contents of the current packet.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipmonitor.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpportConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpportConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpportDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpportDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpportErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpportReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.SetDataToSend(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.SetEOL(System.Byte[],System.Int32,System.Int32)">
            <summary>Used to break the incoming data stream into chunks separated by EOL.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.Connect(System.String,System.Int32)">
            <summary>Connect to a remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.Disconnect">
            <summary>Disconnect from the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.GetLine">
            <summary>Gets a line of text from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.Send(System.Byte[])">
            <summary>Send data to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.SendLine(System.String)">
            <summary>Sends a string followed by a newline.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipport.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipport.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipport.OnDataIn">
            <summary>Fired when data (complete lines) comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipport.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipport.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipport.OnReadyToSend">
            <summary>Fired when IPPort is ready to send data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.AcceptData">
            <summary>Enables or disables data reception (the DataIn event).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.BytesSent">
            <summary>The number of bytes actually sent after an assignment to DataToSend .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.Connected">
            <summary>Triggers a connection or disconnection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.DataToSendB">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.DataToSend">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.EOLB">
            <summary>Used to break the incoming data stream into chunks separated by EOL.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.EOL">
            <summary>Used to break the incoming data stream into chunks separated by EOL.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.KeepAlive">
            <summary>When True, KEEPALIVE packets are enabled (for long connections).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.Linger">
            <summary>When set to True, connections are terminated gracefully.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.LocalPort">
            <summary>The TCP port in the local host where IPPort binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.RemoteHost">
            <summary>The address of the remote host.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.RemotePort">
            <summary>The TCP port in the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.SingleLineMode">
            <summary>Special mode for line-oriented protocols.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapExtendedResponseEventArgs">
            <summary>Event arguments for the ExtendedResponse event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapResultEventArgs">
            <summary>Event arguments for the Result event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapSearchCompleteEventArgs">
            <summary>Event arguments for the SearchComplete event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapSearchPageEventArgs">
            <summary>Event arguments for the SearchPage event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapSearchResultEventArgs">
            <summary>Event arguments for the SearchResult event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Abandon(System.Int32)">
            <summary>Ask the server to abandon a request.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Add">
            <summary>Add an entry specified by DN to the directory server using the attributes defined in AttrType and AttrValue .  All Entries are required to have an objectClass attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Bind">
            <summary>Connect and bind to the directory server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Compare">
            <summary>Compare attributes and values with those of the entry specified by DN .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Delete">
            <summary>Delete an entry specified by DN from the directory server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.ExtendedRequest(System.String,System.Byte[])">
            <summary>Perform an LDAP V3 Extended Operation.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Modify">
            <summary>Perform an LDAP 'modify' operation on the entry specified by DN .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.ModifyRDN(System.String)">
            <summary>Perform an LDAP 'modify RDN' operation an entry specified by DN .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Search(System.String)">
            <summary>Search the directory server using the base object specified in DN and the search filter SearchFilter .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Unbind">
            <summary>Unbind from the directory server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnExtendedResponse">
            <summary>Fired for LDAP V3 Extended Responses.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnResult">
            <summary>Fired for every server response, except search responses.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnSearchComplete">
            <summary>Fired upon completion of a search operation.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnSearchPage">
            <summary>Fired for every page returned from a search operation.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnSearchResult">
            <summary>Fired for every entry returned from a search operation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.AcceptData">
            <summary>Enables or disables data reception from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.AttrCount">
            <summary>Number of attributes values for the current entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.AttrModOp">
            <summary>Array of operations to apply on attributes during an LDAP modify operation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.AttrType">
            <summary>Array of attribute types for the current entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.AttrValueB">
            <summary>Array of attribute values for the current entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.AttrValue">
            <summary>Array of attribute values for the current entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.DeleteOldRDN">
            <summary>Controls whether the old RDN (Relative Distinguished Name) should be deleted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.DN">
            <summary>The Distinguished Name used as the base for LDAP operations.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.LDAPVersion">
            <summary>The version of LDAP used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.MessageId">
            <summary>The message id for the next LDAP request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.PageSize">
            <summary>The maximum number of results per page for the Search method.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.Password">
            <summary>The password used to authenticate to the LDAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.ResultCode">
            <summary>The result code returned in the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.ResultDescription">
            <summary>The descriptive text returned in the last server response (if any).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.ResultDN">
            <summary>The Distinguished Name returned in the last server response (if any).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SearchDerefAliases">
            <summary>Controls alias dereferencing during searching.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SearchReturnValues">
            <summary>Controls whether the search operation returns values of  attributes, or only types.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SearchScope">
            <summary>Controls the scope of LDAP search operations.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SearchSizeLimit">
            <summary>Maximum number of entries that can be returned by the next search  operation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SearchTimeLimit">
            <summary>A time limit for the next search operation (in seconds).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.ServerName">
            <summary>The name or address of the LDAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.ServerPort">
            <summary>The server port for LDAP (default 389).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SortAttributes">
            <summary>A string of attribute names to sort on with optional relative matching rules.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ldap.AttrModOpIndexer">
            <summary>Indexer for AttrModOp.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ldap.AttrTypeIndexer">
            <summary>Indexer for AttrType.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ldap.AttrValueBIndexer">
            <summary>Indexer for AttrValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Ldap.AttrValueIndexer">
            <summary>Indexer for AttrValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.McastDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.McastErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.McastReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mcast.SetDataToSend(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host. Write-only property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mcast.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mcast.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mcast.Send(System.Byte[])">
            <summary>Send data to the remote host.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Mcast.OnDataIn">
            <summary>Fired when data is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Mcast.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Mcast.OnReadyToSend">
            <summary>Fired when the component is ready to send data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.AcceptData">
            <summary>Enables or disables data reception (the DataIn event).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.Active">
            <summary>Enables or disables sending and receiving of data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.DataToSendB">
            <summary>A string of data to be sent to the remote host. Write-only property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.DataToSend">
            <summary>A string of data to be sent to the remote host. Write-only property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.LocalPort">
            <summary>The UDP port in the local host where MCast binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.Loopback">
            <summary>Enables or disables loopback of data sent to the multicast group.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.MulticastGroup">
            <summary>Multicast group to join or leave.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.ReceiveInterface">
            <summary>The interface to receive multicast packets with. If empty, default is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.RemoteHost">
            <summary>The address of the remote host (multicast group).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.RemotePort">
            <summary>The UDP port in the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.SendInterface">
            <summary>The interface to send multicast packets from. If empty, default is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.TimeToLive">
            <summary>The maximum number of subnets that a multicast datagram can traverse.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.MimeProgressEventArgs">
            <summary>Event arguments for the Progress event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.SetMessage(System.Byte[],System.Int32,System.Int32)">
            <summary>Contains the encoded message text or a path to a file which contains the encoded message text.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.DecodeFromFile">
            <summary>Decode From File.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.DecodeFromString">
            <summary>Decode From String.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.EncodeToFile">
            <summary>Encode To File.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.EncodeToString">
            <summary>Encode To String.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.ResetData">
            <summary>Resets the values of all headers and Part- properties.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Mime.OnProgress">
            <summary>Shows the progress of decoding/encoding the input data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.Boundary">
            <summary>The boundary separating the MIME parts. Maximum length of 80 bytes.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.ContentType">
            <summary>The value of the content-type header of the message which was encoded/decoded.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.ContentTypeAttr">
            <summary>The attributes for content-type header of the message which was encoded/decoded.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.MessageB">
            <summary>Contains the encoded message text or a path to a file which contains the encoded message text.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.Message">
            <summary>Contains the encoded message text or a path to a file which contains the encoded message text.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.MessageHeaders">
            <summary>The headers of the MIME message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.PartContentDisposition">
            <summary>Content Disposition for each part 0 to PartCount -1.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.PartContentDispositionAttr">
            <summary>Array holding the content disposition's attributes, if any, for each part, numbered 0 to PartCount -1.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.PartContentId">
            <summary>Content id for each part 0 to PartCount -1.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.PartContentType">
            <summary>Content type for each part 0 to PartCount -1.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.PartContentTypeAttr">
            <summary>Array holding the content type attributes, if any, for each part, numbered 0 to PartCount -1.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.PartCount">
            <summary>The number of MIME parts in the encoded message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.PartDecodedFile">
            <summary>Array holding the filenames with the decoded data numbered 0 to PartCount -1.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.PartDecodedStringB">
            <summary>Array property. It holds the actual content of each part, numbered 0 to PartCount -1.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.PartDecodedString">
            <summary>Array property. It holds the actual content of each part, numbered 0 to PartCount -1.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.PartEncoding">
            <summary>The actual content encoding type for each part 0 to PartCount -1.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.PartFilename">
            <summary>The filename attribute specified in the headers of the part.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.PartHeaders">
            <summary>Headers for each MIME part, numbered 0 to PartCount -1.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.PartName">
            <summary>The name given to a part, such as the filename.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.PartSize">
            <summary>The size of each PartDecodedFile or PartDecodedString .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Mime.PartContentDispositionIndexer">
            <summary>Indexer for PartContentDisposition.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Mime.PartContentDispositionAttrIndexer">
            <summary>Indexer for PartContentDispositionAttr.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Mime.PartContentIdIndexer">
            <summary>Indexer for PartContentId.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Mime.PartContentTypeIndexer">
            <summary>Indexer for PartContentType.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Mime.PartContentTypeAttrIndexer">
            <summary>Indexer for PartContentTypeAttr.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Mime.PartDecodedFileIndexer">
            <summary>Indexer for PartDecodedFile.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Mime.PartDecodedStringBIndexer">
            <summary>Indexer for PartDecodedString.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Mime.PartDecodedStringIndexer">
            <summary>Indexer for PartDecodedString.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Mime.PartEncodingIndexer">
            <summary>Indexer for PartEncoding.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Mime.PartFilenameIndexer">
            <summary>Indexer for PartFilename.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Mime.PartHeadersIndexer">
            <summary>Indexer for PartHeaders.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Mime.PartNameIndexer">
            <summary>Indexer for PartName.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Mime.PartSizeIndexer">
            <summary>Indexer for PartSize.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.MxErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.MxResponseEventArgs">
            <summary>Event arguments for the Response event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mx.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mx.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mx.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mx.Resolve(System.String)">
            <summary>Resolve an email address.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Mx.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Mx.OnResponse">
            <summary>Fired for each MailServer accepting email for the domain.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.DNSPort">
            <summary>The port where the DNS server is listening.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.DNSServer">
            <summary>The address of the DNS Server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.EmailAddress">
            <summary>Triggers a request to the DNSServer for the supplied email address.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.MailServer">
            <summary>Mail server with lowest precedence value (lowest cost to reach).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.RequestId">
            <summary>Identifies each request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.Status">
            <summary>Status of the request: empty while in progress, 'OK' or error message upon completion.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetclockErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netclock.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netclock.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netclock.GetAndSetTime">
            <summary>Same as the GetTime method, but system clock is also set to the received time.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netclock.GetTime">
            <summary>Sends a time request to the TimeServer to get the current time.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netclock.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netclock.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.LocalTime">
            <summary>The time returned by the TimeServer converted to local time.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.ServerTime">
            <summary>The time returned by the TimeServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.TimePort">
            <summary>The UDP port where the remote Time server is listening.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.TimeServer">
            <summary>The time server to request the time from.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetcodeProgressEventArgs">
            <summary>Event arguments for the Progress event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.SetDecodedData(System.Byte[],System.Int32,System.Int32)">
            <summary>Filename of the decoded data or the decoded data itself.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.SetEncodedData(System.Byte[],System.Int32,System.Int32)">
            <summary>Filename of the encoded data or the encoded data itself.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.DecodeToFile">
            <summary>Decode to file.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.DecodeToString">
            <summary>Decode to string.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.EncodeToFile">
            <summary>Encode to file.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.EncodeToString">
            <summary>Encode to string.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netcode.OnProgress">
            <summary>Occurs when PercentDone of the input is read.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.DecodedDataB">
            <summary>Filename of the decoded data or the decoded data itself.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.DecodedData">
            <summary>Filename of the decoded data or the decoded data itself.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.EncodedDataB">
            <summary>Filename of the encoded data or the encoded data itself.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.EncodedData">
            <summary>Filename of the encoded data or the encoded data itself.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.FileCnt">
            <summary>Shows the number of encoded files the component has read from or written into.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.FileName">
            <summary>The destination filename for the encoded data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.Format">
            <summary>The type of encoding to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.IntelliCode">
            <summary>Controls whether NetCode should try to interpret several concatenated messages while uudecoding.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.Mode">
            <summary>The UNIX-style filemode when uuencoding / uudecoding.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.Overwrite">
            <summary>Controls whether created file(s) should overwrite already existing file(s).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.ProgressStep">
            <summary>Controls the granularity at which the Progress event is fired.  Values 0-100.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetdialConnectedEntryEventArgs">
            <summary>Event arguments for the ConnectedEntry event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetdialDeviceEventArgs">
            <summary>Event arguments for the Device event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetdialErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetdialPhonebookEntryEventArgs">
            <summary>Event arguments for the PhonebookEntry event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetdialStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.Connect">
            <summary>Attempt to dial the PhonebookEntry from Phonebook .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.CreateEntry">
            <summary>Create a PhonebookEntry .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.DeleteEntry">
            <summary>Delete a PhonebookEntry .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.Disconnect">
            <summary>Disconnect the last successfully made connection.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.ListConnections">
            <summary>List all current connections.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.ListDevices">
            <summary>List all dial devices.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.ListPhonebook">
            <summary>List all entries in Phonebook .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.ShowDialDialog">
            <summary>Shows the standard RAS dialog for dialing the PhonebookEntry from Phonebook .</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netdial.OnConnectedEntry">
            <summary>Fired for every connected device when the ListConnections method is called.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netdial.OnDevice">
            <summary>Fired for every dial device when the ListDevices method is called.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netdial.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netdial.OnPhonebookEntry">
            <summary>Fired for every Phonebook entry when the ListPhonebook method is called.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netdial.OnStatus">
            <summary>Fired during connection or disconnection attempts.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.CallbackNumber">
            <summary>The callback number to give when directly dialing the remote machine.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.Domain">
            <summary>The name of the domain to join when dialing the RAS connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.EntryDeviceName">
            <summary>The device of the phonebook entry pointed to by PhonebookEntry .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.EntryDeviceType">
            <summary>The device type of the phonebook entry pointed to by PhonebookEntry .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.EntryDNSServer">
            <summary>The DNS server of the phonebook entry pointed to by PhonebookEntry .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.EntryIPAddress">
            <summary>The IP address of the phonebook entry pointed to by PhonebookEntry .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.EntryPhoneNumber">
            <summary>The phone number for the phonebook entry pointed to by PhonebookEntry .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.EntryWINSServer">
            <summary>The WINS server of the phonebook entry pointed to by PhonebookEntry .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.Handle">
            <summary>The handle of the connection. 0 if invalid or not connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.Password">
            <summary>The password to use when direct dialing the remote machine.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.Phonebook">
            <summary>The Phonebook to read the PhonebookEntry from when dialing the remote machine.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.PhonebookEntry">
            <summary>The name of PhonebookEntry to use when dialing the remote machine.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.PhoneNumber">
            <summary>The number to dial when directly dialing the remote machine without the help of a PhonebookEntry .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.RASAvailable">
            <summary>When true, Remote Access System (RAS) is available on the system.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.User">
            <summary>The name of the login user when directly dialing the remote machine.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpGroupListEventArgs">
            <summary>Event arguments for the GroupList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpGroupOverviewEventArgs">
            <summary>Event arguments for the GroupOverview event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpGroupSearchEventArgs">
            <summary>Event arguments for the GroupSearch event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.Connect">
            <summary>Connect to the news server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.Disconnect">
            <summary>Disconnect from the news server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.FetchArticle">
            <summary>Get the headers and body of an article specified in CurrentArticle .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.FetchArticleBody">
            <summary>Get only the body of an article specified in CurrentArticle .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.FetchArticleHeaders">
            <summary>Get only the headers of an article specified in CurrentArticle .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.GroupOverview">
            <summary>Receive an overview for the articles in range OverviewRange in the CurrentGroup .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.GroupSearch">
            <summary>Receive an overview for the articles in range OverviewRange in the CurrentGroup .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.ListGroups">
            <summary>List all groups on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.ListNewGroups">
            <summary>List all new groups on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.LocalizeDate(System.String)">
            <summary>Converts a valid RFC 822 message date to local date and time.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.PostArticle">
            <summary>Post the current article and attached file.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.ResetHeaders">
            <summary>Reset all of the article headers.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnEndTransfer">
            <summary>Fired when the article text completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnGroupList">
            <summary>Fired while group data transfers (during group listings).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnGroupOverview">
            <summary>Fired for each line of article overview data (during group overviews).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnGroupSearch">
            <summary>Fired for each line of group search data (during group searches).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnHeader">
            <summary>Fired for every article header being retrieved during article retrieval.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnPITrail">
            <summary>Traces the commands sent to the news server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnStartTransfer">
            <summary>Fired when the article text starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnTransfer">
            <summary>Fired while the article text gets transferred (to or from the NewsServer ).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleCount">
            <summary>The estimated number of articles in CurrentGroup .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleDate">
            <summary>The date of the current article.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleFrom">
            <summary>The email address of the author (for posting articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleHeaders">
            <summary>The full headers of the article as retrieved from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleId">
            <summary>The message-id of the current article.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleReferences">
            <summary>Articles the posted article follows up to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleReplyTo">
            <summary>The address to reply to (for posting articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleSubject">
            <summary>The article subject (for posted articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleText">
            <summary>The full text of the article (without the headers).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.AttachedFile">
            <summary>A file name of which the contents will be appended to ArticleText when posting articles.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.CheckDate">
            <summary>The date (format YYMMDD HHMMSS) to check for creation of new groups. If the group was created after the date specified, it is considered new.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Command">
            <summary>Can be used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.CurrentArticle">
            <summary>The number or message-id of the current article.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.CurrentGroup">
            <summary>The name of the current group.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.FirstArticle">
            <summary>The number of the first article in CurrentGroup.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.LastArticle">
            <summary>The number of the last article in CurrentGroup .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.MaxLines">
            <summary>The maximum number of message lines besides headers to retrieve.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Newsgroups">
            <summary>A comma separated list of newsgroups in which to post the article.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.NewsPort">
            <summary>The server port for NNTP (default 119).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.NewsServer">
            <summary>The name or address of a news server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Organization">
            <summary>The organization of the author (for posting articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.OtherHeaders">
            <summary>An RFC850 compliant string consisting of extra headers (for posting articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.OverviewRange">
            <summary>A range for the GroupOverview method (first-last).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Password">
            <summary>A login password to login with in the NewsServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.SearchHeader">
            <summary>A header for the GroupSearch method.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.SearchPattern">
            <summary>A search pattern for the GroupSearch method.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.SearchRange">
            <summary>A range for the GroupSearch method (first-last).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.User">
            <summary>A user id to login as in the NewsServer .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PingErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PingResponseEventArgs">
            <summary>Event arguments for the Response event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ping.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ping.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ping.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ping.PingHost(System.String)">
            <summary>Ping a host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ping.WakeOnLAN(System.String,System.String)">
            <summary>Sends a Wake-On-LAN packet.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ping.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ping.OnResponse">
            <summary>Fired when a response packet is received.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.Active">
            <summary>Enables or disables receiving of data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.PacketSize">
            <summary>The size of the packet to send as the ping request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.RemoteHost">
            <summary>The address of the RemoteHost.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.RequestId">
            <summary>A unique identifier for outgoing packets.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.ResponseSource">
            <summary>The source of the last PING response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.ResponseTime">
            <summary>Time elapsed between sending the original packet and the remote host reply.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.TimeToLive">
            <summary>The time to live (TTL) value for the ICMP packets sent by the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.TypeOfService">
            <summary>The type of the ICMP message sent as a ping request.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopMessageListEventArgs">
            <summary>Event arguments for the MessageList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.Connect">
            <summary>Connects to the mail server and attempts to login.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.Delete">
            <summary>Delete a message specified by MessageNumber on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.Disconnect">
            <summary>Disconnects from the mail server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.ListMessageSizes">
            <summary>Retrieves a list of all message sizes from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.ListMessageUIDs">
            <summary>Retrieves a list of all message UID-s from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.LocalizeDate(System.String)">
            <summary>Converts a valid RFC 822 message date to local date and time.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.Reset">
            <summary>Reset all changes and revert back to the state when the user first connected.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.Retrieve">
            <summary>Retrieve a message specified by MessageNumber from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.RetrieveHeaders">
            <summary>Retrieve headers for a message specified by MessageNumber .</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnEndTransfer">
            <summary>Fired when the message completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnHeader">
            <summary>Fired for every message header being retrieved.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnMessageList">
            <summary>Fired for every message listed by ListMessageSizes and/or ListMessageUIDs .</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnStartTransfer">
            <summary>Fired when the message starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnTransfer">
            <summary>Fired while the message gets transferred from MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.AuthMechanism">
            <summary>The authentication mechanism to be used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.Command">
            <summary>Can be used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.LocalFile">
            <summary>The path to a local file for downloading the message body.  If the file exists, it is overwritten. (optional)</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MailPort">
            <summary>The server port for POP (default 110).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MailServer">
            <summary>The name or address of a mail server (internet post office server).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MaxLines">
            <summary>The maximum number of message lines besides headers to retrieve.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageCc">
            <summary>The value of the Cc header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageCount">
            <summary>The number of messages waiting in the mailbox.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageDate">
            <summary>The value of the Date: header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageFrom">
            <summary>The value of the From header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageHeaders">
            <summary>The full headers of the message as retrieved from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageNumber">
            <summary>Current (selected) message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageReplyTo">
            <summary>The value of the Reply-To header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageSize">
            <summary>The size in bytes of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageSubject">
            <summary>The value of the Subject header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageText">
            <summary>The full text of the message as retrieved from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageTo">
            <summary>The value of the To header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageUID">
            <summary>The unique id of the message as specified by the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.Password">
            <summary>The password for the mailbox user.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.TotalSize">
            <summary>Cumulative size in bytes of messages in the mailbox (including headers).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.User">
            <summary>The user id for the mailbox.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RcpConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RcpConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RcpDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RcpErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RcpProgressEventArgs">
            <summary>Event arguments for the Progress event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rcp.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rcp.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rcp.GetFile">
            <summary>Get File.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rcp.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rcp.PutFile">
            <summary>Put File</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rcp.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rcp.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rcp.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rcp.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rcp.OnProgress">
            <summary>Fired whenever data is being transferred between the localhost and RemoteHost .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.FileMode">
            <summary>The file mode for the RemoteFile .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.LocalFile">
            <summary>The file on the local host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.LocalPort">
            <summary>The TCP port in the local host where the component binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.Password">
            <summary>The password associated with User .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.Protocol">
            <summary>Sets the protocol to use for the transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.RemoteFile">
            <summary>The file on the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.RemoteHost">
            <summary>The remote host to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.RemotePort">
            <summary>The port for the service (REXEC or RSHELL).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.User">
            <summary>The identification of the remote user for a transfer.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RexecConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RexecConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RexecDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RexecErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RexecStderrEventArgs">
            <summary>Event arguments for the Stderr event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RexecStdoutEventArgs">
            <summary>Event arguments for the Stdout event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.SetEOL(System.Byte[],System.Int32,System.Int32)">
            <summary>Used to break the stdout data stream into chunks separated by its value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.SetErrEOL(System.Byte[],System.Int32,System.Int32)">
            <summary>Used to break the stderr data stream into chunks separated by its value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.SetStdin(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host while connected.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.Disconnect">
            <summary>Disconnect from the RemoteHost .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.Execute(System.String)">
            <summary>Execute a Command on the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.Send(System.Byte[])">
            <summary>Send standard input to the program executing on the remote host.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rexec.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rexec.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rexec.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rexec.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rexec.OnStderr">
            <summary>Fired when data (complete lines) come in through stderr.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rexec.OnStdout">
            <summary>Fired when data (complete lines) come in through stdout.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.BytesSent">
            <summary>The number of bytes actually sent after an assignment to Stdin.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.Command">
            <summary>The command to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.EOLB">
            <summary>Used to break the stdout data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.EOL">
            <summary>Used to break the stdout data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.ErrEOLB">
            <summary>Used to break the stderr data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.ErrEOL">
            <summary>Used to break the stderr data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.ErrorMessage">
            <summary>The error message returned when any of the steps prior to command execution fail.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.LocalPort">
            <summary>The TCP port in the local host where the component binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.RemoteHost">
            <summary>The address of the remote host.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.RemotePassword">
            <summary>The password of the user on the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.RemotePort">
            <summary>The remote exec service port (default is 512).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.RemoteUser">
            <summary>The id of the user on the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.StdinB">
            <summary>A string of data to be sent to the remote host while connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.Stdin">
            <summary>A string of data to be sent to the remote host while connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RshellConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RshellConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RshellDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RshellErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RshellStderrEventArgs">
            <summary>Event arguments for the Stderr event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RshellStdoutEventArgs">
            <summary>Event arguments for the Stdout event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.SetEOL(System.Byte[],System.Int32,System.Int32)">
            <summary>Used to break the stdout data stream into chunks separated by its value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.SetErrEOL(System.Byte[],System.Int32,System.Int32)">
            <summary>Used to break the stderr data stream into chunks separated by its value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.SetStdin(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host while connected.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.Disconnect">
            <summary>Disconnect from the RemoteHost .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.Execute(System.String)">
            <summary>Execute a Command on the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.Send(System.Byte[])">
            <summary>Send standard input to the program executing on the remote host.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rshell.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rshell.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rshell.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rshell.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rshell.OnStderr">
            <summary>Fired when data (complete lines) come in through stderr.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rshell.OnStdout">
            <summary>Fired when data (complete lines) come in through stdout.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.BytesSent">
            <summary>The number of bytes actually sent after an assignment to Stdin.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.Command">
            <summary>The command to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.EOLB">
            <summary>Used to break the stdout data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.EOL">
            <summary>Used to break the stdout data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.ErrEOLB">
            <summary>Used to break the stderr data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.ErrEOL">
            <summary>Used to break the stderr data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.ErrorMessage">
            <summary>The error message returned when any of the steps prior to command execution fail.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.LocalPort">
            <summary>The TCP port in the local host where the component binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.LocalUser">
            <summary>The id of the user on the local machine.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.RemoteHost">
            <summary>The address of the remote host.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.RemotePort">
            <summary>The remote shell service port (default is 514).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.RemoteUser">
            <summary>The id of the user on the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.StdinB">
            <summary>A string of data to be sent to the remote host while connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.Stdin">
            <summary>A string of data to be sent to the remote host while connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.AddItem(System.String,System.String,System.String)">
            <summary>Insert a new item into the beginning of an RSS feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.AddNamespace(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces array.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.GetFeed(System.String)">
            <summary>Fetch an RSS feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.GetProperty(System.String)">
            <summary>Get the value of a specific RSS feed property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.GetURL(System.String)">
            <summary>Fetch an RSS feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.Put(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.ReadFile(System.String)">
            <summary>Load an RSS file into the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.Reset">
            <summary>Reset all properties of the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.SetProperty(System.String,System.String)">
            <summary>Set the value of a specific RSS feed property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.WriteFile(System.String)">
            <summary>Write an RSS feed from the component.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.AuthScheme">
            <summary>The authorization scheme to be used when server authorization is to be performed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ChannelCategory">
            <summary>Location of the current RSS channel in a hierarchy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ChannelCategoryDomain">
            <summary>URL indicating the definition of the current RSS channel's category.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ChannelCopyright">
            <summary>Copyright information for the current RSS channel (500 char max).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ChannelDescription">
            <summary>Text description of the current RSS feed (Required - 500 char max).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ChannelDocs">
            <summary>URL of the documentation for the format used in the current RSS channel.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ChannelLanguage">
            <summary>Language code for current RSS channel.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ChannelLastBuildDate">
            <summary>The date of the current RSS channel's most recent content change.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ChannelLink">
            <summary>URL of the website that corresponds with the RSS feed (Required - 500 char max).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ChannelManagingEditor">
            <summary>Email address of the current RSS channel's editor.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ChannelPubDate">
            <summary>The date of the current RSS channel's most recent publication.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ChannelTitle">
            <summary>The title of the current RSS Feed (Required - 40 char max).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ChannelWebMaster">
            <summary>Email address of the current RSS channel's webmaster.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ImageLink">
            <summary>URL associated with the channel's associated image.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ImageTitle">
            <summary>The title of the channel's associated image.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ImageURL">
            <summary>URL location of the channel's associated image.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ItemAuthor">
            <summary>Email address of the current item's author.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ItemCategory">
            <summary>Location of the current item within a hierarchy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ItemCategoryDomain">
            <summary>URL indicating the definition of the current item's category.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ItemComments">
            <summary>URL location of the comments page for the current item.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ItemCount">
            <summary>The number of items in the current RSS channel.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ItemDescription">
            <summary>The content of the current item.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ItemGuid">
            <summary>A unique string that identifies the current item.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ItemLink">
            <summary>URL where the full text of the current item can be found.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ItemPubDate">
            <summary>The date of the current item's most recent publication.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ItemSource">
            <summary>Name of the RSS channel where the current item was originally published.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ItemSourceURL">
            <summary>URL location of the XML-version of the current item's source.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ItemTitle">
            <summary>The title or headline of the current item.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.NamespaceCount">
            <summary>The number of currently-defined namespaces in this RSS channel.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.NamespacePrefixes">
            <summary>The namespace prefixes associated with Namespaces .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Namespaces">
            <summary>The name or XML prefix associated with NamespacePrefixes .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.RSSData">
            <summary>The complete text of the RSS XML file.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.RSSVersion">
            <summary>The RSS protocol version of the current RSS feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.TextInputDescription">
            <summary>The description for the current RSS channel's TextInput object.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.TextInputLink">
            <summary>Processor URL for the text of the current RSS channel's TextInput object.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.TextInputName">
            <summary>The name of the current RSS channel's TextInput object.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.TextInputTitle">
            <summary>The title of the current RSS channel's TextInput object.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Rss.ItemAuthorIndexer">
            <summary>Indexer for ItemAuthor.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Rss.ItemCategoryIndexer">
            <summary>Indexer for ItemCategory.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Rss.ItemCategoryDomainIndexer">
            <summary>Indexer for ItemCategoryDomain.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Rss.ItemCommentsIndexer">
            <summary>Indexer for ItemComments.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Rss.ItemDescriptionIndexer">
            <summary>Indexer for ItemDescription.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Rss.ItemGuidIndexer">
            <summary>Indexer for ItemGuid.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Rss.ItemLinkIndexer">
            <summary>Indexer for ItemLink.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Rss.ItemPubDateIndexer">
            <summary>Indexer for ItemPubDate.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Rss.ItemSourceIndexer">
            <summary>Indexer for ItemSource.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Rss.ItemSourceURLIndexer">
            <summary>Indexer for ItemSourceURL.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Rss.ItemTitleIndexer">
            <summary>Indexer for ItemTitle.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Rss.NamespacePrefixesIndexer">
            <summary>Indexer for NamespacePrefixes.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Rss.NamespacesIndexer">
            <summary>Indexer for Namespaces.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.AddRecipient(System.Int32,System.String)">
            <summary>This method will add a recipient of the specified type to the recipient list.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.CancelMessage(System.String)">
            <summary>This method will cancel the specified message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.CheckLink">
            <summary>This method will check the connection to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.CheckMessage(System.String)">
            <summary>This method will retrieve the status of the specified message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.Connect(System.String,System.String)">
            <summary>This method will bind as a transmitter to the SMPP service.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.Disconnect">
            <summary>This method will disconnect from the SMPP service.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.ReplaceMessage(System.String,System.String)">
            <summary>This method replaces a previously sent message with a new one.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.SendCommand(System.Int32,System.Byte[])">
            <summary>This will format and send a PDU using the specified command id and payload.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.SendData(System.Byte[])">
            <summary>This method sends data to the Recipient .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.SendMessage(System.String)">
            <summary>The methods sends a message to all recipients in the recipient list.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnConnected">
            <summary>This event is fired after a successful bind operation.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnDisconnected">
            <summary>This event is fired when connection to the SMS service is lost.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnError">
            <summary>This event is fired when the server detects an error.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnPITrail">
            <summary>This event is fired once for each PDU sent between the client and server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.Connected">
            <summary>This property indicates whether or not the component is bound.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.MessageExpiration">
            <summary>This property denotes the validity period of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.MessageId">
            <summary>This is the id of the most recently sent message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.MessagePriority">
            <summary>This is the priority level of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.Password">
            <summary>This is the user's password.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.Recipient">
            <summary>This property corresponds to the first recipient in the recipient list.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.RecipientAddress">
            <summary>Array property that indicates the address of a particular recipient.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.RecipientCount">
            <summary>This value indicates the number of recipients in the recipient list.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.RecipientType">
            <summary>Array property that indicates the type of a particular recipient.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.ScheduledDelivery">
            <summary>This value tells the server when to deliver the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.ServiceType">
            <summary>This indicates the type of service for the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.SMPPPort">
            <summary>The server port for SMPP (default 2775).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.SMPPServer">
            <summary>This is the SMPP entity to which the component will connect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.SMPPVersion">
            <summary>This is the SMPP version to be used throughout the connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.SystemType">
            <summary>This is a string representing the type of system during a connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.UserId">
            <summary>This value is used for identification with the SMPP service.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Smpp.RecipientAddressIndexer">
            <summary>Indexer for RecipientAddress.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Smpp.RecipientTypeIndexer">
            <summary>Indexer for RecipientType.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpExpandEventArgs">
            <summary>Event arguments for the Expand event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Connect">
            <summary>Connects to the mail relay and sends the SMTP HELO command.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Disconnect">
            <summary>Disconnect from the SMTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Expand(System.String)">
            <summary>Asks the MailServer to expand a name or mailing list.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.ProcessQueue(System.String)">
            <summary>Sends the messages which have previously been queued into QueueDir .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Queue(System.String)">
            <summary>Queues the message into QueueDir .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.ResetHeaders">
            <summary>Resets all the message headers to empty.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Send">
            <summary>Send the current message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.SendToTerminalAndEmail">
            <summary>Send to terminal and email.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.SendToTerminalOnly">
            <summary>Send to terminal only.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.SendToTerminalOrEmail">
            <summary>Send to terminal or email.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Verify(System.String)">
            <summary>Send a Verify request to the SMTP server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnEndTransfer">
            <summary>Fired when the message text completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnExpand">
            <summary>Fired for every email address returned by the server when the Expand method is called.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnStartTransfer">
            <summary>Fired when the message text starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnTransfer">
            <summary>Fired while the message text gets transferred to MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.AllowExtensions">
            <summary>A switch allowing the component to use ESMTP features (SMTP extensions).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.AttachedFile">
            <summary>A file to append to MessageText when sending mail.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.AuthMechanism">
            <summary>The authentication mechanism to be used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.BCc">
            <summary>A comma separated list of addresses for blind carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Cc">
            <summary>A comma separated list of addresses for carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Command">
            <summary>Can be used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.DeliveryNotificationTo">
            <summary>Email address to send a delivery notification to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.From">
            <summary>The email address of the sender (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Importance">
            <summary>Importance of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MailPort">
            <summary>The server port for SMTP (default 25).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MailServer">
            <summary>The name or address of a mail server (mail relay).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MessageDate">
            <summary>The Date of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MessageHeaders">
            <summary>The full headers of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MessageId">
            <summary>The MessageId for the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MessageText">
            <summary>The full text of the message to send (without headers).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.OtherHeaders">
            <summary>An RFC 822 compliant string consisting of extra headers.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Password">
            <summary>A login password to login with in the MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Priority">
            <summary>Priority of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.ReadReceiptTo">
            <summary>Email address to send a read receipt to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.ReplyTo">
            <summary>A mail address to reply to (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.SendTo">
            <summary>A comma separated list of addresses for destinations (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Sensitivity">
            <summary>Sensitivity of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Subject">
            <summary>The subject of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.User">
            <summary>A user id to login as in the MailServer .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpagentBadPacketEventArgs">
            <summary>Event arguments for the BadPacket event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpagentDiscoveryRequestEventArgs">
            <summary>Event arguments for the DiscoveryRequest event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpagentErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpagentGetBulkRequestEventArgs">
            <summary>Event arguments for the GetBulkRequest event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpagentGetNextRequestEventArgs">
            <summary>Event arguments for the GetNextRequest event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpagentGetRequestEventArgs">
            <summary>Event arguments for the GetRequest event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpagentGetUserPasswordEventArgs">
            <summary>Event arguments for the GetUserPassword event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpagentPacketTraceEventArgs">
            <summary>Event arguments for the PacketTrace event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpagentReportEventArgs">
            <summary>Event arguments for the Report event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpagentSetRequestEventArgs">
            <summary>Event arguments for the SetRequest event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpagent.SetLocalEngineId(System.Byte[],System.Int32,System.Int32)">
            <summary>The Engine Id of the SNMP Agent.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpagent.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpagent.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpagent.Reset">
            <summary>Clears the object arrays.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpagent.SendSecureTrap(System.String,System.String,System.String,System.String)">
            <summary>Sends an authenticated SNMPv3 trap.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpagent.SendTrap(System.String,System.String)">
            <summary>Sends an SNMP Trap.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpagent.Value(System.String)">
            <summary>Returns the value corresponding to an OID.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpagent.OnBadPacket">
            <summary>Fired for erroneous and/or malformed messages.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpagent.OnDiscoveryRequest">
            <summary>Fired when an SNMPv3 discovery packet is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpagent.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpagent.OnGetBulkRequest">
            <summary>Fired when a GetBulkRequest packet is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpagent.OnGetNextRequest">
            <summary>Fired when a GetNextRequest packet is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpagent.OnGetRequest">
            <summary>Fired when a GetRequest packet is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpagent.OnGetUserPassword">
            <summary>Retrieves a password associated with a user.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpagent.OnPacketTrace">
            <summary>Fired for every packet sent or received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpagent.OnReport">
            <summary>Fired when a Report packet is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpagent.OnSetRequest">
            <summary>Fired when a SetRequest packet is received.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpagent.AcceptData">
            <summary>Enables or disables data reception.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpagent.Active">
            <summary>Enables or disables sending and receiving of SNMP packets.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpagent.LocalEngineIdB">
            <summary>The Engine Id of the SNMP Agent.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpagent.LocalEngineId">
            <summary>The Engine Id of the SNMP Agent.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpagent.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpagent.LocalPort">
            <summary>The UDP port in the local host where the component listens.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpagent.ObjCount">
            <summary>Number of objects in the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpagent.ObjId">
            <summary>Array of OIDs encoded as strings.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpagent.ObjType">
            <summary>Array of object types.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpagent.ObjValueB">
            <summary>Array of object values.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpagent.ObjValue">
            <summary>Array of object values.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpagent.RequestId">
            <summary>The request-id to mark outgoing packets with.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpagent.SNMPVersion">
            <summary>Version of SNMP used for outgoing requests (traps).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpagent.SysUpTime">
            <summary>Time passed since the agent was initialized (in hundredths of a second).</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Snmpagent.ObjIdIndexer">
            <summary>Indexer for ObjId.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Snmpagent.ObjTypeIndexer">
            <summary>Indexer for ObjType.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Snmpagent.ObjValueBIndexer">
            <summary>Indexer for ObjValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Snmpagent.ObjValueIndexer">
            <summary>Indexer for ObjValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpmgrBadPacketEventArgs">
            <summary>Event arguments for the BadPacket event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpmgrDiscoveryRequestEventArgs">
            <summary>Event arguments for the DiscoveryRequest event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpmgrDiscoveryResponseEventArgs">
            <summary>Event arguments for the DiscoveryResponse event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpmgrErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpmgrInformRequestEventArgs">
            <summary>Event arguments for the InformRequest event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpmgrPacketTraceEventArgs">
            <summary>Event arguments for the PacketTrace event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpmgrReportEventArgs">
            <summary>Event arguments for the Report event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpmgrResponseEventArgs">
            <summary>Event arguments for the Response event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnmpmgrTrapEventArgs">
            <summary>Event arguments for the Trap event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpmgr.SetLocalEngineId(System.Byte[],System.Int32,System.Int32)">
            <summary>The Engine Id of the SNMP Manager.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpmgr.SetRemoteEngineId(System.Byte[],System.Int32,System.Int32)">
            <summary>The Engine Id of the remote agent.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpmgr.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpmgr.Discover">
            <summary>Performs SNMPv3 discovery.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpmgr.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpmgr.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpmgr.Reset">
            <summary>Clears the object arrays.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpmgr.SendGetBulkRequest(System.Int32,System.Int32)">
            <summary>Send a GetBulkRequest packet.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpmgr.SendGetNextRequest">
            <summary>Send GetNextRequest packet.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpmgr.SendGetRequest">
            <summary>Send GetRequest packet.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpmgr.SendInformRequest">
            <summary>Send an InformRequest packet.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpmgr.SendSetRequest">
            <summary>Send Set Request packet.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snmpmgr.Value(System.String)">
            <summary>Returns the value corresponding to an OID.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpmgr.OnBadPacket">
            <summary>Fired for erroneous and/or malformed messages.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpmgr.OnDiscoveryRequest">
            <summary>Fired when an SNMPv3 discovery packet is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpmgr.OnDiscoveryResponse">
            <summary>Fired when an SNMPv3 discovery response is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpmgr.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpmgr.OnInformRequest">
            <summary>Fired when an InformRequest packet is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpmgr.OnPacketTrace">
            <summary>Fired for every packet sent or received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpmgr.OnReport">
            <summary>Fired when a Report packet is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpmgr.OnResponse">
            <summary>Fired when a GetResponse packet is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snmpmgr.OnTrap">
            <summary>Fired when a SNMP trap packet is received.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.AcceptData">
            <summary>Enables or disables data reception.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.Active">
            <summary>Enables or disables sending and receiving of SNMP packets.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.AuthenticationProtocol">
            <summary>The authentication protocol used for SNMPv3 packets.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.Community">
            <summary>The community string used to authenticate SNMP packets.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.ErrorDescription">
            <summary>Description of the status code for the last SNMP packet received by the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.ErrorIndex">
            <summary>Index of the first variable (object) that caused an error from the last SNMP response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.ErrorStatus">
            <summary>Status code for the last SNMP packet received by the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.LocalEngineIdB">
            <summary>The Engine Id of the SNMP Manager.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.LocalEngineId">
            <summary>The Engine Id of the SNMP Manager.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.LocalPort">
            <summary>The UDP port in the local host where the SNMP Manager is bound to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.ObjCount">
            <summary>Number of objects in the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.ObjId">
            <summary>Array of OIDs encoded as strings.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.ObjType">
            <summary>Array of object types.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.ObjValueB">
            <summary>Array of object values.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.ObjValue">
            <summary>Array of object values.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.Password">
            <summary>The password used for SNMPv3 authentication.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.RemoteEngineBoots">
            <summary>The remote engine boots (SNMPv3).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.RemoteEngineIdB">
            <summary>The Engine Id of the remote agent.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.RemoteEngineId">
            <summary>The Engine Id of the remote agent.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.RemoteEngineTime">
            <summary>The remote engine time (SNMPv3).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.RemoteHost">
            <summary>The address of the remote host.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.RemotePort">
            <summary>The UDP port where the remote SNMP agent is listening.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.RequestId">
            <summary>The request-id to mark outgoing packets with.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.SNMPVersion">
            <summary>Version of SNMP used for outgoing requests.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snmpmgr.User">
            <summary>The user name used for SNMPv3 authentication.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Snmpmgr.ObjIdIndexer">
            <summary>Indexer for ObjId.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Snmpmgr.ObjTypeIndexer">
            <summary>Indexer for ObjType.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Snmpmgr.ObjValueBIndexer">
            <summary>Indexer for ObjValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Snmpmgr.ObjValueIndexer">
            <summary>Indexer for ObjValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnppConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnppErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnppPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snpp.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snpp.Connect">
            <summary>Connect to an SNPP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snpp.Disconnect">
            <summary>Disconnect from an SNPP gateway.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snpp.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snpp.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snpp.Reset">
            <summary>Resets the server state created during the connection.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snpp.Send">
            <summary>Send the current message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snpp.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snpp.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snpp.OnPITrail">
            <summary>Traces the commands sent to the server, and the respective replies.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.CallerId">
            <summary>The id of the caller.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.Command">
            <summary>Can be used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.Message">
            <summary>The message being sent (alphanumeric).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.PagerId">
            <summary>The id number of the pager to send a Message to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.ServerName">
            <summary>The name or address of the SNPP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.ServerPort">
            <summary>The server port for SNPP (default 444).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.AddCookie(System.String,System.String)">
            <summary>Sets a cookie and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.AddNamespace(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces array.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.AddParam(System.String,System.String)">
            <summary>Adds a parameter-value pair.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.BuildPacket">
            <summary>Build the request packet.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.EvalPacket">
            <summary>Evaluate the packet in SOAPPacket .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.SendPacket">
            <summary>Send the packet.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.SendRequest">
            <summary>Send the request.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.Value(System.String)">
            <summary>Returns the value of a parameter.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnTransfer">
            <summary>Fired while the response transfers.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ActionURI">
            <summary>The value of the SOAP-Action header.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.AuthScheme">
            <summary>The authorization scheme to be used when server authorization is to be performed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ContentType">
            <summary>Content type for SOAP request data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.CookieCount">
            <summary>Number of cookies in the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.CookieName">
            <summary>Array of cookie names.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.CookieValue">
            <summary>Array of cookie values.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.FaultActor">
            <summary>Actor of any faults returned by the SOAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.FaultCode">
            <summary>Code of any faults returned by the SOAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.FaultString">
            <summary>Textual description of any faults returned by the SOAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Method">
            <summary>The remote Method .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.MethodURI">
            <summary>The URI corresponding to the SOAP Method .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.NamespaceCount">
            <summary>The number of default Namespaces defined.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Namespaces">
            <summary>The default Namespaces defined by the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ParamAttr">
            <summary>Extra attributes of the Method parameters.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ParamCount">
            <summary>The number of parameters sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ParamName">
            <summary>The names of the Method parameters.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ParamValue">
            <summary>The values of the Method parameters.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Pragma">
            <summary>A browser/server specific header line (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Prefixes">
            <summary>The prefixes corresponding to the default Namespaces defined by the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ProxyAuthorization">
            <summary>Similar to the Authorization property, but for proxy authorization.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ProxyPort">
            <summary>Port for the proxy server (default 80).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ProxyServer">
            <summary>Name or IP address of a proxy server (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ReturnValue">
            <summary>Value returned by the SOAP Method .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.SOAPEncoding">
            <summary>The type of SOAP Encoding used for SOAP requests.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.SOAPHeader">
            <summary>Contents of the optional SOAP header sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.SOAPPacket">
            <summary>Full contents of the SOAP packet.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.URL">
            <summary>The URL to fetch.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ValueFormat">
            <summary>Format of data returned or set.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XAttrCount">
            <summary>Size of attribute values array for the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XAttrName">
            <summary>Array of attribute names for the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XAttrNamespace">
            <summary>Array of attribute namespaces for the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XAttrPrefix">
            <summary>Array of attribute prefixes for the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XAttrValue">
            <summary>Array of attribute values for the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XChildren">
            <summary>The number of children of the element pointed to by XPath .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XElement">
            <summary>The name of the element pointed to by XPath .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XNamespace">
            <summary>The namespace of the element pointed to by XPath .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XParent">
            <summary>The parent of the element pointed to by XPath .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XPath">
            <summary>A path into the SOAPPacket received by the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XPrefix">
            <summary>The prefix of the element pointed to by XPath .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XText">
            <summary>The text of the element pointed to by XPath .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Soap.CookieNameIndexer">
            <summary>Indexer for CookieName.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Soap.CookieValueIndexer">
            <summary>Indexer for CookieValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Soap.NamespacesIndexer">
            <summary>Indexer for Namespaces.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Soap.ParamAttrIndexer">
            <summary>Indexer for ParamAttr.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Soap.ParamNameIndexer">
            <summary>Indexer for ParamName.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Soap.ParamValueIndexer">
            <summary>Indexer for ParamValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Soap.PrefixesIndexer">
            <summary>Indexer for Prefixes.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Soap.XAttrNameIndexer">
            <summary>Indexer for XAttrName.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Soap.XAttrNamespaceIndexer">
            <summary>Indexer for XAttrNamespace.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Soap.XAttrPrefixIndexer">
            <summary>Indexer for XAttrPrefix.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Soap.XAttrValueIndexer">
            <summary>Indexer for XAttrValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SyslogErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SyslogPacketInEventArgs">
            <summary>Event arguments for the PacketIn event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Syslog.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Syslog.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Syslog.SendPacket(System.Int32,System.Int32,System.String)">
            <summary>Send a log packet to RemoteHost .</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Syslog.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Syslog.OnPacketIn">
            <summary>Fires whenever a system log packet is received.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Syslog.Active">
            <summary>Enables or disables sending and receiving of data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Syslog.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Syslog.LocalPort">
            <summary>The port in the local host where Syslog binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Syslog.RemoteHost">
            <summary>Sets a specific host for outgoing log packets.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Syslog.RemotePort">
            <summary>Sets a specific port for outgoing log packets.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetCommandEventArgs">
            <summary>Event arguments for the Command event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetDoEventArgs">
            <summary>Event arguments for the Do event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetDontEventArgs">
            <summary>Event arguments for the Dont event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetSubOptionEventArgs">
            <summary>Event arguments for the SubOption event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetWillEventArgs">
            <summary>Event arguments for the Will event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetWontEventArgs">
            <summary>Event arguments for the Wont event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.SetDataToSend(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.SetDoSubOption(System.Byte[],System.Int32,System.Int32)">
            <summary>A Telnet suboption to send to the server with the suboption command.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.SetUrgentData(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent urgently (out-of-band) to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.Connect(System.String)">
            <summary>Connect to a remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.Disconnect">
            <summary>Disconnect from the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.Send(System.Byte[])">
            <summary>Send data to the remote host.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnCommand">
            <summary>Fired when a Telnet command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnDataIn">
            <summary>Fired when data is received from the remote host.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnDo">
            <summary>Fired when a Telnet DO OPTION command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnDont">
            <summary>Fired when a Telnet DONT OPTION command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnReadyToSend">
            <summary>Fired when the component is ready to send data.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnSubOption">
            <summary>Fired when a Telnet suboption command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnWill">
            <summary>Fired when a Telnet WILL OPTION command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnWont">
            <summary>Fired when a Telnet WONT OPTION command comes from the Telnet server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.AcceptData">
            <summary>Enables or disables data reception (the DataIn event).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.BytesSent">
            <summary>The number of bytes actually sent after an assignment to DataToSend .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.Command">
            <summary>A single character Telnet command code to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.Connected">
            <summary>Triggers a connection or disconnection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.DataToSendB">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.DataToSend">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.DontOption">
            <summary>A single character Telnet option code to be sent to the server with the Telnet DONT command.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.DoOption">
            <summary>A single character Telnet option code to be sent to the server with the Telnet DO command.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.DoSubOptionB">
            <summary>A Telnet suboption to send to the server with the suboption command.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.DoSubOption">
            <summary>A Telnet suboption to send to the server with the suboption command.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.KeepAlive">
            <summary>When True, KEEPALIVE packets are enabled (for long connections).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.Linger">
            <summary>When set to True, connections are terminated gracefully.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.LocalPort">
            <summary>The TCP port in the local host where IPPort binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.RemoteHost">
            <summary>The address of the remote host.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.RemotePort">
            <summary>The Telnet port in the remote host (default is 23).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.Transparent">
            <summary>When True, Telnet command processing is disabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.UrgentDataB">
            <summary>A string of data to be sent urgently (out-of-band) to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.UrgentData">
            <summary>A string of data to be sent urgently (out-of-band) to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.WillOption">
            <summary>A single character Telnet option code to be sent to the server with the Telnet WILL command.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.WontOption">
            <summary>A single character Telnet option code to be sent to the server with the Telnet WONT command.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TftpEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TftpErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TftpStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TftpTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Tftp.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Tftp.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Tftp.GetFile">
            <summary>Download a RemoteFile from the TFTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Tftp.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Tftp.PutFile">
            <summary>Upload a file specified by LocalFile to the TFTP server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Tftp.OnEndTransfer">
            <summary>Fired when a file completes downloading/uploading.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Tftp.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Tftp.OnStartTransfer">
            <summary>Fired when a file starts downloading/uploading.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Tftp.OnTransfer">
            <summary>Fired during file download/upload.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.LocalFile">
            <summary>The file on the local host to transfer the data to/from.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.MaxRetransmits">
            <summary>The number of times to retry sending a failed packet before disconnecting.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.RemoteFile">
            <summary>The file on the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.RetransmitTimeout">
            <summary>Maximum time in seconds to wait for a reply packet from the server before retransmitting the last packet.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.TFTPPort">
            <summary>The UDP port where the remote TFTP server is listening.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.TFTPServer">
            <summary>The address of the TFTP server to exchange files with.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TracerouteErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TracerouteHopEventArgs">
            <summary>Event arguments for the Hop event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TracerouteHopResolvedEventArgs">
            <summary>Event arguments for the HopResolved event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Traceroute.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Traceroute.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Traceroute.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Traceroute.TraceTo(System.String)">
            <summary>Trace the route to a host.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Traceroute.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Traceroute.OnHop">
            <summary>Fired for each hop in the trace to the RemoteHost .</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Traceroute.OnHopResolved">
            <summary>Fired when the name of a hop address is found.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.HopCount">
            <summary>Returns the number of hops taken by the trace.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.HopHostAddress">
            <summary>The IP address of the host for a particular hop in the trace.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.HopHostName">
            <summary>The name of the host for a particular hop in the trace.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.HopLimit">
            <summary>The maximum number of hops to allow for a trace.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.HopTime">
            <summary>The amount of time taken by a particular hop in the trace.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.HopTimeout">
            <summary>Maximum amount of time to wait for an individual hop to complete.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.RemoteHost">
            <summary>The address of a host to trace to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.ResolveNames">
            <summary>Determines whether the component resolves the host name for each host during the trace.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Traceroute.HopHostAddressIndexer">
            <summary>Indexer for HopHostAddress.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Traceroute.HopHostNameIndexer">
            <summary>Indexer for HopHostName.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Traceroute.HopTimeIndexer">
            <summary>Indexer for HopTime.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.UdpportDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.UdpportErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.UdpportReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Udpport.SetDataToSend(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host.  Write-only property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Udpport.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Udpport.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Udpport.Send(System.Byte[])">
            <summary>Send data to the remote host.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Udpport.OnDataIn">
            <summary>Fired when data is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Udpport.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Udpport.OnReadyToSend">
            <summary>Fired when the component is ready to send data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.AcceptData">
            <summary>Enables or disables data reception (the DataIn event).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.Active">
            <summary>Enables or disables sending and receiving of data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.DataToSendB">
            <summary>A string of data to be sent to the remote host.  Write-only property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.DataToSend">
            <summary>A string of data to be sent to the remote host.  Write-only property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.DontRoute">
            <summary>If set to True, forces the socket to send data directly to interface (no routing).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.LocalPort">
            <summary>The UDP port in the local host where UDPPort binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.RemoteHost">
            <summary>The address of the remote host.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.RemotePort">
            <summary>The UDP port in the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.TimeToLive">
            <summary>The maximum number of subnets that a datagram can traverse.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavDirListEventArgs">
            <summary>Event arguments for the DirList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavResourcePropertiesEventArgs">
            <summary>Event arguments for the ResourceProperties event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.AddCookie(System.String,System.String)">
            <summary>Sets a cookie and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.AddNamespace(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces array.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.CopyResource(System.String,System.String)">
            <summary>Copy a resource to a new location.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.DeleteResource(System.String)">
            <summary>Delete a resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.FindProperties(System.String)">
            <summary>Get resource property values from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.FindPropertyNames(System.String)">
            <summary>Get resource property names from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.GetProperty(System.String)">
            <summary>Get the value for a particular property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.GetResource(System.String)">
            <summary>Get a resource using the WebDAV GET method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.ListDirectory(System.String)">
            <summary>List the properties for a resource collection.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.LockResource(System.String)">
            <summary>Obtain a lock for a specified resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.MakeDirectory(System.String)">
            <summary>Make a new directory.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.MoveResource(System.String,System.String)">
            <summary>Moves one resource to a new location.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.PatchProperties(System.String)">
            <summary>Update the current set of properties on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.PostToResource(System.String,System.Byte[])">
            <summary>Posts data to a resource using the WebDAV POST method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.PutResource(System.String)">
            <summary>Send data to the server using the PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.SetProperty(System.String,System.String)">
            <summary>Set the value of a property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.UnLockResource(System.String)">
            <summary>Unlocks a resource.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnDirList">
            <summary>Fires for each entry returned in a directory listing.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnResourceProperties">
            <summary>Fires for each entry returned through a property search.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.AuthScheme">
            <summary>The authorization scheme to be used when server authorization is to be performed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.CookieCount">
            <summary>Number of cookies in the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.CookieName">
            <summary>Array of cookie names.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.CookieValue">
            <summary>Array of cookie values.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Depth">
            <summary>The depth associated with the current operation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.LocalFile">
            <summary>The path to a local file used for DAV operations.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.LockOwner">
            <summary>The principle that owns the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.LockScope">
            <summary>The scope of the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.LockTimeout">
            <summary>The time to live for the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.LockTokens">
            <summary>The lock string to be used when submitting operations on a locked resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.LockType">
            <summary>The type of the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.NamespaceCount">
            <summary>The number of currently-defined namespaces channel.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.NamespacePrefixes">
            <summary>The namespace prefixes associated with Namespaces .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Namespaces">
            <summary>The name or XML prefix associated with NamespacePrefixes .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.PropertyCount">
            <summary>The number of properties in property arrays such as PropertyName and PropertyValue .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.PropertyName">
            <summary>Array containing the names of WebDAV properties.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.PropertyOperation">
            <summary>Array containing the operation to be associated with each property during a call to PatchProperties .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.PropertyStatus">
            <summary>Array containing the status of retrieved properties.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.PropertyValue">
            <summary>Array containing values of WebDAV properties.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.TransferredDataB">
            <summary>The contents of the last transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.TransferredData">
            <summary>The contents of the last transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webdav.CookieNameIndexer">
            <summary>Indexer for CookieName.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webdav.CookieValueIndexer">
            <summary>Indexer for CookieValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webdav.NamespacePrefixesIndexer">
            <summary>Indexer for NamespacePrefixes.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webdav.NamespacesIndexer">
            <summary>Indexer for Namespaces.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webdav.PropertyNameIndexer">
            <summary>Indexer for PropertyName.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webdav.PropertyOperationIndexer">
            <summary>Indexer for PropertyOperation.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webdav.PropertyStatusIndexer">
            <summary>Indexer for PropertyStatus.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webdav.PropertyValueIndexer">
            <summary>Indexer for PropertyValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.AddCookie(System.String,System.String)">
            <summary>Sets a cookie and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.AddFormVar(System.String,System.String)">
            <summary>Adds a form variable and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.Reset">
            <summary>Reset the component</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.Submit">
            <summary>Post current data to the URL specified by the URL property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.SubmitTo(System.String)">
            <summary>Post current data to the URL specified by the 'URL' parameter.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.AuthScheme">
            <summary>The authorization scheme to be used when server authorization is to be performed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.ContentType">
            <summary>Content type for posted data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.CookieCount">
            <summary>Number of cookies in the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.CookieName">
            <summary>Array of cookie names.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.CookieValue">
            <summary>Array of cookie values.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Encoding">
            <summary>The encoding type for the form data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.FormVarCount">
            <summary>Number of form variables for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.FormVarNames">
            <summary>Array of form variable names for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.FormVarValues">
            <summary>Array of form variable values for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.From">
            <summary>The email address of the HTTP agent (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten. (optional)</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.ProxyAuthorization">
            <summary>Similar to the Authorization property, but for proxy authorization.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.ProxyPassword">
            <summary>A password if Basic authentication is to be used for the proxy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.ProxyPort">
            <summary>Port for the proxy server (default 80).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.ProxyServer">
            <summary>Name or IP address of a proxy server (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.ProxyUser">
            <summary>A user name if Basic authentication is to be used for the proxy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.TransferredDataB">
            <summary>The contents of the last transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.TransferredData">
            <summary>The contents of the last transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.URL">
            <summary>The URL to post information to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webform.CookieNameIndexer">
            <summary>Indexer for CookieName.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webform.CookieValueIndexer">
            <summary>Indexer for CookieValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webform.FormVarNamesIndexer">
            <summary>Indexer for FormVarNames.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webform.FormVarValuesIndexer">
            <summary>Indexer for FormVarValues.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadUploadProgressEventArgs">
            <summary>Event arguments for the UploadProgress event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.AddCookie(System.String,System.String)">
            <summary>Sets a cookie and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.AddFileVar(System.String,System.String)">
            <summary>Adds a file variable and the corresponding file name.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.AddFormVar(System.String,System.String)">
            <summary>Adds a form variable and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.Upload">
            <summary>Posts data to the URL specified by URL .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.UploadTo(System.String)">
            <summary>Posts data to the URL specified by the 'URL' parameter.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnUploadProgress">
            <summary>Fired while the component is uploading files to the URL .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.AuthScheme">
            <summary>The authorization scheme to be used when server authorization is to be performed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.CookieCount">
            <summary>Number of cookies in the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.CookieName">
            <summary>Array of cookie names.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.CookieValue">
            <summary>Array of cookie values.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FileCount">
            <summary>The number of files posted to the ASP page.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FileNames">
            <summary>Array property containing the path and filename of each file.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FileVarNames">
            <summary>Array property containing the name of each form variable corresponding to the files in FileNames .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FormVarCount">
            <summary>Number of form variables for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FormVarNames">
            <summary>Array of form variable names for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FormVarValues">
            <summary>Array of form variable values for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.From">
            <summary>The email address of the HTTP agent (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.ProxyAuthorization">
            <summary>Similar to the Authorization property, but for proxy authorization.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.ProxyPassword">
            <summary>A password if Basic authentication is to be used for the proxy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.ProxyPort">
            <summary>Port for the proxy server (default 80).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.ProxyServer">
            <summary>Name or IP address of a proxy server (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.ProxyUser">
            <summary>A user name if Basic authentication is to be used for the proxy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.TransferredDataB">
            <summary>The contents of the last transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.TransferredData">
            <summary>The contents of the last transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.URL">
            <summary>The URL to post information to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webupload.CookieNameIndexer">
            <summary>Indexer for CookieName.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webupload.CookieValueIndexer">
            <summary>Indexer for CookieValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webupload.FileNamesIndexer">
            <summary>Indexer for FileNames.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webupload.FileVarNamesIndexer">
            <summary>Indexer for FileVarNames.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webupload.FormVarNamesIndexer">
            <summary>Indexer for FormVarNames.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Webupload.FormVarValuesIndexer">
            <summary>Indexer for FormVarValues.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WhoisConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WhoisConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WhoisDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WhoisErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Whois.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Whois.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Whois.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Whois.Query(System.String)">
            <summary>Get information about a domain.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Whois.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Whois.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Whois.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Whois.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.DefaultServer">
            <summary>The default server from which to retrieve registrar information.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.Domain">
            <summary>The specific domain to request information about.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.DomainInfo">
            <summary>The information that is returned by the Server .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.Server">
            <summary>The server to request domain information from.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlpCharactersEventArgs">
            <summary>Event arguments for the Characters event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlpCommentEventArgs">
            <summary>Event arguments for the Comment event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlpEndElementEventArgs">
            <summary>Event arguments for the EndElement event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlpEndPrefixMappingEventArgs">
            <summary>Event arguments for the EndPrefixMapping event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlpErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlpEvalEntityEventArgs">
            <summary>Event arguments for the EvalEntity event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlpIgnorableWhitespaceEventArgs">
            <summary>Event arguments for the IgnorableWhitespace event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlpMetaEventArgs">
            <summary>Event arguments for the Meta event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlpPIEventArgs">
            <summary>Event arguments for the PI event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlpSpecialSectionEventArgs">
            <summary>Event arguments for the SpecialSection event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlpStartElementEventArgs">
            <summary>Event arguments for the StartElement event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlpStartPrefixMappingEventArgs">
            <summary>Event arguments for the StartPrefixMapping event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmlp.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmlp.Attr(System.String)">
            <summary>Returns the value of the specified attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmlp.Flush">
            <summary>Flushes the parser and checks its end state.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmlp.Input(System.String)">
            <summary>Provides input to the parser.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmlp.ParseFile(System.String)">
            <summary>Parses the file specified by FileName.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmlp.Reset">
            <summary>Resets the parser.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmlp.OnCharacters">
            <summary>Fired for plain text segments of the input stream.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmlp.OnComment">
            <summary>Fired when a comment section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmlp.OnEndElement">
            <summary>Fired when an end-element tag is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmlp.OnEndPrefixMapping">
            <summary>Fired when leaving the scope of a namespace declaration.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmlp.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmlp.OnEvalEntity">
            <summary>Fired every time an entity needs to be evaluated.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmlp.OnIgnorableWhitespace">
            <summary>Fired when a section of ignorable whitespace is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmlp.OnMeta">
            <summary>Fired when a meta section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmlp.OnPI">
            <summary>Fired when a processing instruction section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmlp.OnSpecialSection">
            <summary>Fired when a special section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmlp.OnStartElement">
            <summary>Fired when a begin-element tag is encountered in the document.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmlp.OnStartPrefixMapping">
            <summary>Fired when entering the scope of a namespace declaration.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.AttrCount">
            <summary>Size of attribute values array for the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.AttrName">
            <summary>Array of attribute names for the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.AttrNamespace">
            <summary>Array of attribute namespaces for the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.AttrPrefix">
            <summary>Array of attribute prefixes for the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.AttrValue">
            <summary>Array of attribute values for the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.BuildDOM">
            <summary>When True, an internal object model of the XML document is created.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.ElementCount">
            <summary>Number of elements in the current element stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.Elements">
            <summary>Array of elements in the current element stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.ExtraNameChars">
            <summary>Extra characters for the parser to consider as name characters.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.ExtraSpaceChars">
            <summary>Extra characters for the parser to consider as white space.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.FlushOnEOL">
            <summary>If set, the parser flushes its text buffer after every line of text.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.NamespaceCount">
            <summary>The number of namespaces in the current namespace stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.Namespaces">
            <summary>The namespaces in the current namespace stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.Offset">
            <summary>Current offset of the document being parsed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.Prefixes">
            <summary>The namespace prefixes in the current namespace stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.Validate">
            <summary>When True, the parser checks that the document consists of well-formed XML.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.XChildren">
            <summary>Number of children for the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.XElement">
            <summary>The name of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.XNamespace">
            <summary>The namespace of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.XParent">
            <summary>The parent of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.XPath">
            <summary>Provides a way to point to a specific element in the document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.XPrefix">
            <summary>The prefix of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmlp.XText">
            <summary>The text of the current element.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Xmlp.AttrNameIndexer">
            <summary>Indexer for AttrName.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Xmlp.AttrNamespaceIndexer">
            <summary>Indexer for AttrNamespace.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Xmlp.AttrPrefixIndexer">
            <summary>Indexer for AttrPrefix.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Xmlp.AttrValueIndexer">
            <summary>Indexer for AttrValue.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Xmlp.ElementsIndexer">
            <summary>Indexer for Elements.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Xmlp.NamespacesIndexer">
            <summary>Indexer for Namespaces.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Xmlp.PrefixesIndexer">
            <summary>Indexer for Prefixes.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppBuddyUpdateEventArgs">
            <summary>Event arguments for the BuddyUpdate event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppIQEventArgs">
            <summary>Event arguments for the IQ event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppMessageInEventArgs">
            <summary>Event arguments for the MessageIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppPresenceEventArgs">
            <summary>Event arguments for the Presence event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppSubscriptionRequestEventArgs">
            <summary>Event arguments for the SubscriptionRequest event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppSyncEventArgs">
            <summary>Event arguments for the Sync event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Config(System.String)">
            <summary>Sets or retrieves a component configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Add(System.String,System.String,System.String)">
            <summary>This method will add an entity to this entity's roster.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Cancel(System.String)">
            <summary>This will cancel another entity's subscription to this entity's presence.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.ChangePresence(System.Int32,System.String)">
            <summary>This method will set the availability and status of this entity.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Connect(System.String,System.String)">
            <summary>This method will connect the component to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Disconnect">
            <summary>This method disconnects the component from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.DoEvents">
            <summary>This method processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.ProbePresence(System.String)">
            <summary>Use this method to probe for another entity's presence.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.QueryRegister(System.String)">
            <summary>This method queries a server for the necessary registration fields.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Register(System.String)">
            <summary>This method registers an account with a server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Remove(System.String,System.String,System.String)">
            <summary>This method will remove an entity from this entity's roster.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.RetrieveRoster">
            <summary>This method will retrieve this entity's roster from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.SendCommand(System.String)">
            <summary>This method sends a command to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.SendMessage(System.String)">
            <summary>This method will send a message to the specified user.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.SetUserInfoField(System.String,System.String)">
            <summary>This method will add a user information field for registration.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.SubscribeTo(System.String)">
            <summary>Use this method to subscribe to another entity's presence.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Unregister">
            <summary>This method cancels an account with the host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.UnsubscribeTo(System.String)">
            <summary>This method will cancel a subscription to another entity's presence.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnBuddyUpdate">
            <summary>This event is fired whenever a roster entry is updated.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnConnected">
            <summary>This event is fired when a connection to the IM Server is completed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnDisconnected">
            <summary>This event is fired when the chat service connection is lost.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnError">
            <summary>This event is fired when the server sends a protocol error message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnIQ">
            <summary>This event is fired for IQ messages not normally supported by the component.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnMessageIn">
            <summary>This event is fired upon receipt of a message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnPITrail">
            <summary>This event is fired for all protocol messages.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnPresence">
            <summary>This event is fired when the presence of a subscribed entity changes.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnSubscriptionRequest">
            <summary>This event fires when a subscription request is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnSync">
            <summary>This event fires upon a complete information synchronization with the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.BuddyCount">
            <summary>This is the number of buddies in the buddy list.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.BuddyGroup">
            <summary>This is a comma-separated list of each buddy's associated group names.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.BuddyId">
            <summary>This is a list of the jabber ids in the buddy list.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.BuddySubscription">
            <summary>This is a list of the subscription status for each buddy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.Connected">
            <summary>This indicates the component's login status.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.FirewallHost">
            <summary>Name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.FirewallPassword">
            <summary>A password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.FirewallPort">
            <summary>Port of the firewall to connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.FirewallType">
            <summary>Determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.FirewallUser">
            <summary>A user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.IMPort">
            <summary>The server port for XMPP (default 5222).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.IMServer">
            <summary>This is the instant messaging server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.MessageHTML">
            <summary>This is the HTML version of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.MessageSubject">
            <summary>This is the subject of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.MessageText">
            <summary>This is the plain text of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.MessageThread">
            <summary>This is the thread name of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.MessageType">
            <summary>This is the type of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.OtherData">
            <summary>This properties contains extra data elements for the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.Password">
            <summary>This is the user's password.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.Presence">
            <summary>This is the availability of the this entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.Resource">
            <summary>This is the resource for the current session.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.Status">
            <summary>Description of the availability of this entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.User">
            <summary>The user portion of this entity's Jabber ID.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.UserInfoCount">
            <summary>This is the current number of named registration fields.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.UserInfoFields">
            <summary>This is a list of the names of necessary registration fields.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.UserInfoValues">
            <summary>This is a list of values associated with registration fields.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Xmpp.BuddyGroupIndexer">
            <summary>Indexer for BuddyGroup.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Xmpp.BuddyIdIndexer">
            <summary>Indexer for BuddyId.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Xmpp.BuddySubscriptionIndexer">
            <summary>Indexer for BuddySubscription.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Xmpp.UserInfoFieldsIndexer">
            <summary>Indexer for UserInfoFields.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.Xmpp.UserInfoValuesIndexer">
            <summary>Indexer for UserInfoValues.</summary>
        </member>
        <member name="F:nsoftware.core.FAbout.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:nsoftware.core.FAbout.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:nsoftware.core.FAbout.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
